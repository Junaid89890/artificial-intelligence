def is_safe(graph, color_map, node, color):
    for neighbor in graph[node]:
        if color_map.get(neighbor) == color:
            return False
    return True

def map_coloring(graph, colors, node, color_map):
    if node == len(graph):
        return color_map
    for color in colors:
        if is_safe(graph, color_map, node, color):
            color_map[node] = color
            result = map_coloring(graph, colors, node + 1, color_map)
            if result:
                return result
            del color_map[node]
    return None

def solve_map_coloring():
    graph = {
        0: [1, 2],
        1: [0, 2, 3],
        2: [0, 1, 3],
        3: [1, 2]
    }
    colors = ['Red', 'Green', 'Blue']
    color_map = {}
    return map_coloring(graph, colors, 0, color_map)

print(solve_map_coloring())
